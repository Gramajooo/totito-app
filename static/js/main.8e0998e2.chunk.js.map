{"version":3,"sources":["components/Cell.jsx","components/Board.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cell","value","onClick","style","className","Board","cell","map","i","App","useState","Array","fill","board","setBoard","stepNumber","setStepNumber","xTurno","setXTurno","ganador","lines","length","a","b","c","lineWinner","pintado","boardPoint","slice","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAUeA,EAVF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACfC,EAAQF,EAAK,eAAWA,GAAX,OAEnB,OACE,qBAAKG,UAAWD,EAAOD,QAASA,EAAhC,SACGD,KCKQI,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMJ,EAAT,EAASA,QAAT,OACZ,qBAAKE,UAAU,QAAf,SACGE,EAAKC,KAAI,SAACD,EAAME,GAAP,OACR,cAAC,EAAD,CAAcP,MAAOK,EAAMJ,QAAS,kBAAMA,EAAQM,KAAvCA,SC+CFC,EAhDH,WACV,MAA0BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAlD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACMC,EAGN,SAAoBb,GAWlB,IAVA,IAAMc,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIlB,EAAKgB,IAAMhB,EAAKgB,KAAOhB,EAAKiB,IAAMjB,EAAKgB,KAAOhB,EAAKkB,GACrD,OAAOlB,EAAKgB,GAGhB,OAAO,KApBOG,CAAWZ,EAAME,IAC3BW,EAAUT,EAAS,IAAM,IA+B/B,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,CAAOE,KAAMO,EAAME,GAAab,QAZhB,SAACM,GACnB,IAAMmB,EAAad,EAAMe,MAAM,EAAGb,EAAa,GACzCT,EAAI,YAAOqB,EAAWZ,IACxBI,GAAWb,EAAKE,KACpBF,EAAKE,GAAKkB,EACVZ,EAAS,GAAD,mBAAKa,GAAL,CAAiBrB,KACzBU,EAAcW,EAAWN,QACzBH,GAAWD,OAMT,6BACGE,EACGU,MAAM,YAAcV,GACpB,sBAAwBO,QClCrBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e0998e2.chunk.js","sourcesContent":["const Cell = ({ value, onClick }) => {\r\n  const style = value ? `cell ${value}` : `cell`;\r\n\r\n  return (\r\n    <div className={style} onClick={onClick}>\r\n      {value}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import Cell from \"./Cell\";\r\n\r\nconst Board = ({ cell, onClick }) => (\r\n  <div className=\"board\">\r\n    {cell.map((cell, i) => (\r\n      <Cell key={i} value={cell} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Board;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Board from \"./components/Board\";\n\nconst App = () => {\n  const [board, setBoard] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xTurno, setXTurno] = useState(true);\n  const ganador = lineWinner(board[stepNumber]);\n  const pintado = xTurno ? \"X\" : \"O\";\n\n  function lineWinner(cell) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (cell[a] && cell[a] === cell[b] && cell[a] === cell[c]) {\n        return cell[a];\n      }\n    }\n    return null;\n  }\n  const handleClick = (i) => {\n    const boardPoint = board.slice(0, stepNumber + 1);\n    const cell = [...boardPoint[stepNumber]];\n    if (ganador || cell[i]) return;\n    cell[i] = pintado;\n    setBoard([...boardPoint, cell]);\n    setStepNumber(boardPoint.length);\n    setXTurno(!xTurno);\n  };\n\n  return (\n    <div className=\"App\">\n      <Board cell={board[stepNumber]} onClick={handleClick} />\n      <h3>\n        {ganador\n          ? alert(\"Ganador: \" + ganador)\n          : \"Siguiente jugador: \" + pintado}\n      </h3>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}